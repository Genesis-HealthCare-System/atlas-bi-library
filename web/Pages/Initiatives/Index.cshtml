@page
@inject IConfiguration Configuration
@model Atlas_Web.Pages.Initiatives.IndexModel
@{
    Layout = HttpContext.Request.Headers["x-requested-with"] == "XMLHttpRequest" ? "../Shared/_AjaxLayout.cshtml" : "../Shared/_Layout.cshtml";
}
@{
    ViewData["Title"] = "Data Initiatives";
}

@if(Model.DataInitiative is null)
{   
    {
        ViewData["Title"] = "Initiatives";

        @section Side_Links {
            @if (Model.Permissions.Contains(20))
            {
                <li>
                    <a class="" data-toggle="mdl" data-target="newModal" data-tooltip="Create New Initiative">
                        <span class="icon has-text-grey is-large ">
                            <i class="fas fa-lg fa-plus"></i>
                        </span>
                    </a>
                </li>

            }
        }
    }
    <partial name="_All" />
} else
{
	
    {
        ViewData["Title"] = @Model.DataInitiative.Name;
    }
    
    @section Side_Links {
        <li>
            <a class=" @Html.Raw((@Model.DataInitiative.Favorite=="yes") ? "favorite" : "")" data-tooltip="@Html.Raw((@Model.DataInitiative.Favorite=="yes") ? "Remove from Favorites" : "Add to Favorites")" fav-type="initiative" object-id="@Model.DataInitiative.Id">
                <span class="icon has-text-grey is-large ">
                        <i class="fas fa-lg fa-star"></i>
                    </span>
            </a>
        </li>
         @if (@Configuration["features:enable_sharing"] == null || @Configuration["features:enable_sharing"].ToString().ToLower() == "true")
         {
            <li>
                <a class="" data-tooltip="Share" data-toggle="mdl" data-target="shareModal" data-name="@Model.DataInitiative.Name" data-type="initiative">
                    <span class="icon has-text-grey is-large ">
                        <i class="fas fa-lg fa-share"></i>
                    </span>
                </a>
            </li>
        }

        @if (@Configuration["features:enable_feedback"] == null || @Configuration["features:enable_feedback"].ToString().ToLower() == "true"){
        <li>
            <a class="" data-tooltip="Share Feedback" data-toggle="mdl" data-target="shareFeedback" data-name="@Model.DataInitiative.Name">
                <span class="icon has-text-grey is-large ">
                    <i class="far fa-lg fa-thumbs-up"></i>
                </span>
            </a>
        </li>
    }
        @if (Model.Permissions.Contains(20))
        {
            <li>
                <a class="" data-toggle="mdl" data-target="newModal" data-tooltip="Create New Initiative">
                     <span class="icon has-text-grey is-large ">
                        <i class="fas fa-lg fa-plus"></i>
                    </span>
                </a>
            </li>

        }
        @if (Model.Permissions.Contains(22))
        {
            <li>
                <a class=""data-toggle="mdl" data-target="editModal" data-tooltip="Open Atlas Editor">
                    <span class="icon has-text-grey is-large ">
                        <i class="fas fa-lg fa-edit"></i>
                    </span>
                </a>
            </li>
        }
        @if (Model.Permissions.Contains(21))
        {
            <li>
                <a class="" data-tooltip="Delete this Initaitive" href="/Initiatives?handler=DeleteInitiative&Id=@Model.DataInitiative.Id"  onclick="return confirm('Are you sure you want to remove this?');">
                    <span class="icon has-text-grey is-large ">
                        <i class="fas fa-lg fa-trash"></i>
                    </span>
                </a>
            </li>
        }
    }
   
    <partial name="_Details" />
    @if (Model.Permissions.Contains(22))
    {
        <partial name="_Edit" />
         
    }
   
}
@if (Model.Permissions.Contains(20))
{
    <partial name="_New" />
}

@if (Model.Permissions.Contains(20) || Model.Permissions.Contains(22)){
  
    @section js {
        <textarea class="postLoadScripts"><script src="/js/flowchart.min.js" async></script>@if(!Request.Headers["User-Agent"].ToString().Contains("Trident")){<script>hljs.highlightAll();</script>}<script src="/js/editor.min.js" async></script></textarea>
    }
}
